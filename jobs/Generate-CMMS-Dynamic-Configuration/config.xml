<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.7"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.7">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>Environment</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>DEV</string>
              <string>TEST</string>
              <string>UAT</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.66">
    <script>pipeline {
    agent any
    environment {
        def workspace = pwd()
        def CONFIG = &quot;&quot;
        def autoCancelled = false
        REPO_URI = &quot;git@bitbucket.org:fclweb/iib.git&quot;
        JENKINS_HOME = &quot;/home/jenkins&quot;
        WORKSPACE_HOME = &quot;/var/lib/jenkins/workspace&quot;
        WORKTREES_HOME = &quot;/var/lib/jenkins/worktrees&quot;
        IIB_REPO_HOME = &quot;/var/lib/jenkins/repositories&quot;
    }
    stages {
        stage (&quot;Init IIB master repository&quot;) {
            steps {
                sh &apos;&apos;&apos;
                    if [ -d &quot;${IIB_REPO_HOME}/iib&quot; ]; then 
                        cd &quot;${IIB_REPO_HOME}/iib&quot;
                        if [ $(git rev-parse --is-inside-work-tree) = true ]; then
                            echo &quot;IIB git local repository is already there, let&apos;s get it synchronized.&quot;
                            git reset --hard
                            git clean -fdx
                            git pull
                        fi
                    else
                        echo &quot;IIB git local repository does not exist, clone it from remote BitBucket repository.&quot;
                        if [ ! -d &quot;${IIB_REPO_HOME}&quot; ]; then 
                            mkdir -p &quot;${IIB_REPO_HOME}&quot;
                        fi
                        
                        cd &quot;${IIB_REPO_HOME}&quot;
                        git clone &quot;${REPO_URI}&quot; 
                    fi
                &apos;&apos;&apos;
            }
        }
        stage (&quot;Build worktree master-cmms&quot;) {
            steps {                
                script {
                    sh &quot;cd ${WORKTREES_HOME}&quot;
                    def exists = fileExists(&quot;${WORKTREES_HOME}/master-cmms&quot;)
                    if (exists) {
                        dir (&quot;${WORKTREES_HOME}/master-cmms&quot; ) {
                            sh &apos;&apos;&apos;
                                if [ $(git rev-parse --is-inside-work-tree) = true ]; then
                                    echo &quot;Working tree is already there, let&apos;s get it synchronized.&quot;
                                    git reset --hard
                                    git clean -fdx
                                    git pull
                                fi
                            &apos;&apos;&apos;    
                        }
                    } else {
                        dir (&quot;${IIB_REPO_HOME}/iib&quot;) {
                            echo &quot;Working tree does not exist, add it from remote BitBucket repository.&quot;
                            sh &quot;git worktree add ${WORKTREES_HOME}/master-cmms master-cmms&quot;
                        }
                    }
                } 
            }
        }
        stage (&quot;Build project IIB Dynamic Configuration&quot; ) {
            steps {
                withCredentials([file(credentialsId: &apos;keepass&apos;, variable: &apos;FILE&apos;)]) {
                    dir (&quot;${WORKTREES_HOME}/master-cmms/configuration&quot;) {
                        sh &quot;/var/lib/jenkins/workspace/BootStrap_SCM_BUILD_Pipeline/iib-bootstrap/ant-iib-bootstrap/generateProjectConfFromTemplate.sh IIB_CMMS_configuration_template.xml IIB_CMMS_${params.Environment}_configuration.xml  ${params.Environment}&quot;
                    }
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>