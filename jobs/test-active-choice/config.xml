<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.8"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.8">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <org.biouno.unochoice.ChoiceParameter plugin="uno-choice@2.1">
          <name>APP_NAME</name>
          <description></description>
          <randomName>choice-parameter-3208903597714</randomName>
          <visibleItemCount>1</visibleItemCount>
          <script class="org.biouno.unochoice.model.GroovyScript">
            <secureScript plugin="script-security@1.58">
              <script>list = []     
new File(&quot;/var/lib/jenkins/workspace/release-tronia-3.0-SNAPSHOT&quot;).eachDir() { file-&gt;
         list.add(file.getName())
      }

return list.findAll{ item -&gt; item != &apos;logs&apos;}</script>
              <sandbox>false</sandbox>
            </secureScript>
            <secureFallbackScript plugin="script-security@1.58">
              <script>return [&quot;No Applications selected&quot;]</script>
              <sandbox>false</sandbox>
            </secureFallbackScript>
          </script>
          <projectName>test-active-choice</projectName>
          <choiceType>PT_CHECKBOX</choiceType>
          <filterable>false</filterable>
          <filterLength>1</filterLength>
        </org.biouno.unochoice.ChoiceParameter>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.67">
    <script>pipeline {
    agent any
    stages {
        stage(&quot;Build&quot;) {
            steps {
				script {
					try {
						def appList = &quot;${params.APP_NAME}&quot;.split(&apos;,&apos;)
						appList.each { appName -&gt;
							println &quot;APP_NAME=${appName}&quot;
						}
					}catch(err){
					}finally{
					}
				}
			}
		}
	}
}</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>